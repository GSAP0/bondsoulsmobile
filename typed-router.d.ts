/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/3': RouteRecordInfo<'/3', '/3', Record<never, never>, Record<never, never>>,
    '/bio': RouteRecordInfo<'/bio', '/bio', Record<never, never>, Record<never, never>>,
    '/chat': RouteRecordInfo<'/chat', '/chat', Record<never, never>, Record<never, never>>,
    '/dashboard': RouteRecordInfo<'/dashboard', '/dashboard', Record<never, never>, Record<never, never>>,
    '/instructions': RouteRecordInfo<'/instructions', '/instructions', Record<never, never>, Record<never, never>>,
    '/interests': RouteRecordInfo<'/interests', '/interests', Record<never, never>, Record<never, never>>,
    '/match_filters': RouteRecordInfo<'/match_filters', '/match_filters', Record<never, never>, Record<never, never>>,
    '/otp': RouteRecordInfo<'/otp', '/otp', Record<never, never>, Record<never, never>>,
    '/picture': RouteRecordInfo<'/picture', '/picture', Record<never, never>, Record<never, never>>,
    '/questions': RouteRecordInfo<'/questions', '/questions', Record<never, never>, Record<never, never>>,
    '/statistics': RouteRecordInfo<'/statistics', '/statistics', Record<never, never>, Record<never, never>>,
    '/survey': RouteRecordInfo<'/survey', '/survey', Record<never, never>, Record<never, never>>,
    '/verification': RouteRecordInfo<'/verification', '/verification', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/3.vue': {
      routes: '/3'
      views: never
    }
    'src/pages/bio.vue': {
      routes: '/bio'
      views: never
    }
    'src/pages/chat.vue': {
      routes: '/chat'
      views: never
    }
    'src/pages/dashboard.vue': {
      routes: '/dashboard'
      views: never
    }
    'src/pages/instructions.vue': {
      routes: '/instructions'
      views: never
    }
    'src/pages/interests.vue': {
      routes: '/interests'
      views: never
    }
    'src/pages/match_filters.vue': {
      routes: '/match_filters'
      views: never
    }
    'src/pages/otp.vue': {
      routes: '/otp'
      views: never
    }
    'src/pages/picture.vue': {
      routes: '/picture'
      views: never
    }
    'src/pages/questions.vue': {
      routes: '/questions'
      views: never
    }
    'src/pages/statistics.vue': {
      routes: '/statistics'
      views: never
    }
    'src/pages/survey.vue': {
      routes: '/survey'
      views: never
    }
    'src/pages/verification.vue': {
      routes: '/verification'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
